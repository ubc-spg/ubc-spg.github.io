
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    [{"authors":null,"categories":null,"content":"I am a Tenure-Track Assistant Professor in the CS Department, University of British Columbia.\nI completed my PhD with Peter Druschel and Deepak Garg from Max Planck Institute for Software Systems (MPI-SWS). Before my PhD, I worked at NetApp, Bengaluru (India), and completed my Bachelors in Computer Science from Birla Institute of Technology and Science (BITS) Pilani (India).\nI am broadly interested in systems security, data privacy, operating systems, and distributed systems. I have worked on building systems that enable online services to comply with data privacy and usage policies, and prevent accidental disclosures due to bugs and misconfigurations. More recently, I have been working on solutions to ensure privacy in Cloud services in the face of side-channel disclosures. Currently, I am also exploring systems for effective contact tracing and epidemic risk notification in the context of COVID-19.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"be3afcc21756e99d322c1904b392e9df","permalink":"https://ubc-spg.github.io/author/aastha-mehta/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/aastha-mehta/","section":"authors","summary":"I am a Tenure-Track Assistant Professor in the CS Department, University of British Columbia.\nI completed my PhD with Peter Druschel and Deepak Garg from Max Planck Institute for Software Systems (MPI-SWS).","tags":null,"title":"Aastha Mehta","type":"authors"},{"authors":null,"categories":null,"content":"My research aims to help developers improve the correctness, security, and performance of software systems. I am particularly interested in developing methods that are applicable to large, existing software systems, ranging from complex open-source projects to industrial-scale software. This leads to a broad array of research interests over software engineering and programming languages topics: test-input generation, specification mining, program synthesis. My interest in analyzing large software systems with fuzz testing touches the systems and security communities.\nIn May 2021, I received my Ph.D. at the University of California, Berkeley, where I was advised by Koushik Sen. My PhD research focused on automatic test-input generation, particularly fuzz testing, with the goal of producing inputs that induce correctness, security, and performance bugs in software. I also explored how the search techniques used to scale these input generation tools apply in the domain of program synthesis. My dissertation is available on the EECS department website.\nFrom July 2021-2022, I was a postdoctoral researcher at Microsoft Research, NYC. There, I worked on methods to safeguard reinforcement learning and leverage deep learning for testing. In Summer 2018, I interned at Google, where I built large-scale static analysis to automatically generate fuzz targets. My team continued building on my work after my departure, resulting in the FUDGE tool. In Summer 2017 I was a research intern in the Tools for Software Engineers group at Microsoft, working on automating detection of anomolous errors in the distributed build system CloudBuild. In May 2016 I received my B.Sc. (in Combined Honours Computer Science and Mathematics) at the University of British Columbia, and was awarded the Governor General’s Silver Medal for highest standing in the graduating class of the Faculty of Science.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"d5bb6f12249fe612084aaf6266932f6b","permalink":"https://ubc-spg.github.io/author/caroline-lemieux/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/caroline-lemieux/","section":"authors","summary":"My research aims to help developers improve the correctness, security, and performance of software systems. I am particularly interested in developing methods that are applicable to large, existing software systems, ranging from complex open-source projects to industrial-scale software.","tags":null,"title":"Caroline Lemieux","type":"authors"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"bf93a77893f2baf7f1d05597eadde821","permalink":"https://ubc-spg.github.io/author/jinyuan-liang/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/jinyuan-liang/","section":"authors","summary":"","tags":null,"title":"Jinyuan Liang","type":"authors"},{"authors":null,"categories":null,"content":"I am an assistant professor at the University of British Columbia in Vancouver, where I am part of the Systopia lab, and a member of CAIDA. Prior to this, I was a postdoc researcher at Microsoft Research in NY. Even before, I completed my PhD at Columbia University under the supervision of Roxana Geambasu, Augustin Chaintreau, and Daniel Hsu.\nI am broadly interested in machine learning systems, with a specific focus on applications that provide rigorous guarantees of robustness, privacy, and security. My research focuses both on improving practical and theoretical tools (differential privacy, causal inference, reinforcement learning) and enabling specific use-cases (ML attacks/defenses, privacy preserving data management, system decisions optimization).\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"db32ee25157d7f861ca9b8d695f26733","permalink":"https://ubc-spg.github.io/author/mathias-lecuyer/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/mathias-lecuyer/","section":"authors","summary":"I am an assistant professor at the University of British Columbia in Vancouver, where I am part of the Systopia lab, and a member of CAIDA. Prior to this, I was a postdoc researcher at Microsoft Research in NY.","tags":null,"title":"Mathias Lécuyer","type":"authors"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"e4a65769d2d4167f79c1616f2c5090c5","permalink":"https://ubc-spg.github.io/author/qiaoyue-tang/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/qiaoyue-tang/","section":"authors","summary":"","tags":null,"title":"Qiaoyue Tang","type":"authors"},{"authors":null,"categories":null,"content":"I am an Assistant Professor in the Department of Computer Science at the University of British Columbia in Vancouver, Canada, and a core member of the interdisciplinary Designing for People research cluster.\nI use my background in computer science and mathematics to craft novel interactive technologies driven by sensors, machine learning and computer vision. These technologies range from improving touchscreen input, to novel motion tracking systems, on-world projected interfaces, and much more.\nAlongside my research interests, I routinely compete in DEF CON CTF (1st place 2016, 2017, 2019, 2022) and other security contests.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"556c9ea57da9168e7df09e58135a3ecb","permalink":"https://ubc-spg.github.io/author/robert-xiao/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/robert-xiao/","section":"authors","summary":"I am an Assistant Professor in the Department of Computer Science at the University of British Columbia in Vancouver, Canada, and a core member of the interdisciplinary Designing for People research cluster.","tags":null,"title":"Robert Xiao","type":"authors"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"4a11d6ddaaebf31b5632a7821c3c3c9d","permalink":"https://ubc-spg.github.io/author/soo-yee-lim/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/soo-yee-lim/","section":"authors","summary":"","tags":null,"title":"Soo Yee Lim","type":"authors"},{"authors":null,"categories":null,"content":"I am a Tenure-Track Assistant Professor in the Computer Science Department, University of British Columbia. I am part of the Systopia Lab where we work on Systems and Security research broadly. My research focuses on building more observable and transparent systems. I work on topics such as Digital Provenance, Auditing, Accountability, Intrusion Detection, and Systems Optimization.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://ubc-spg.github.io/author/thomas-pasquier/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/thomas-pasquier/","section":"authors","summary":"I am a Tenure-Track Assistant Professor in the Computer Science Department, University of British Columbia. I am part of the Systopia Lab where we work on Systems and Security research broadly.","tags":null,"title":"Thomas Pasquier","type":"authors"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"d131b22484ab927ca4972b4fce1c933d","permalink":"https://ubc-spg.github.io/author/yayu-wang/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/yayu-wang/","section":"authors","summary":"","tags":null,"title":"Yayu Wang","type":"authors"},{"authors":[],"categories":null,"content":"Slides can be added in a few ways:\nCreate slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes. Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://ubc-spg.github.io/event/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/event/example/","section":"event","summary":"An example event.","tags":[],"title":"Example Event","type":"event"},{"authors":["Z Cheng","Q Lv","J Liang","Y Wang","D Sun","T Pasquier","X Han"],"categories":null,"content":"","date":1716163200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1716163200,"objectID":"5466234391b8345cd53c413ba96ef425","permalink":"https://ubc-spg.github.io/publication/2024-sp/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/2024-sp/","section":"publication","summary":"Provenance graphs are structured audit logs that describe the history of a system's execution. Recent studies have explored a variety of techniques to analyze provenance graphs for automated host intrusion detection, focusing particularly on advanced persistent threats. Sifting through their design documents, we identify four common dimensions that drive the development of *provenance-based intrusion detection systems* (PIDSes): **scope** (can PIDSes detect modern attacks that infiltrate across application boundaries?), **attack agnosticity** (can PIDSes detect novel attacks without a priori knowledge of attack characteristics?), **timeliness** (can PIDSes efficiently monitor host systems as they run?), and **attack reconstruction** (can PIDSes distill attack activity from large provenance graphs so that sysadmins can easily understand and quickly respond to system intrusion?). We present KAIROS, the first PIDS that simultaneously satisfies the desiderata in all four dimensions, whereas existing approaches sacrifice at least one and struggle to achieve comparable detection performance. Kairos leverages a novel graph neural network-based encoder-decoder architecture that learns the temporal evolution of a provenance graph's structural changes to quantify the degree of *anomalousness* for each system event. Then, based on this fine-grained information, Kairos reconstructs attack footprints, generating compact *summary graphs* that accurately describe malicious activity over a *stream* of system audit logs. Using state-of-the-art benchmark datasets, we demonstrate that Kairos outperforms previous approaches.","tags":null,"title":"KAIROS: Practical Intrusion Detection and Investigation using Whole-system Provenance","type":"publication"},{"authors":["Z Cheng","Q Lv","J Liang","Y Wang","D Sun","T Pasquier","X Han"],"categories":null,"content":"","date":1716076800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1716076800,"objectID":"59f84a9dd76a7513ae3bad63a8046baa","permalink":"https://ubc-spg.github.io/publication/2024-sp-supp/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/2024-sp-supp/","section":"publication","summary":"This document is a companion contain materials supplementary to our paper published in the 43rd IEEE Symposium on Security and Privacy S\u0026P 2024.","tags":null,"title":"Kairos: Practical Intrusion Detection and Investigation using Whole-system Provenance (Supplementary Material)","type":"publication"},{"authors":["SY Lim","X Han","T Pasquier"],"categories":null,"content":"","date":1694304000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1694304000,"objectID":"53f749c6292e6d95921afcb3e95cc71f","permalink":"https://ubc-spg.github.io/publication/2023-sigcomm-ebpf/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/2023-sigcomm-ebpf/","section":"publication","summary":"For safety reasons, unprivileged users today have only limited ways to customize the kernel through the extended Berkeley Packet Filter (eBPF). This is unfortunate, especially since the eBPF framework itself has seen an increase in scope over the years. We propose SandBPF, a software-based kernel isolation technique that dynamically sandboxes eBPF programs to allow unprivileged users to safely extend the kernel, unleashing eBPF’s full potential. Our early proof-of-concept shows that SandBPF can effectively prevent exploits missed by eBPF’s native safety mechanism (i.e., static verification) while incurring 0%-10% overhead on webserver benchmarks.","tags":null,"title":"Unleashing Unprivileged eBPF Potential with Dynamic Sandboxing","type":"publication"},{"authors":null,"categories":null,"content":"","date":1666569600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1666569600,"objectID":"c1d17ff2b20dca0ad6653a3161942b64","permalink":"https://ubc-spg.github.io/people/","publishdate":"2022-10-24T00:00:00Z","relpermalink":"/people/","section":"","summary":"","tags":null,"title":"People","type":"landing"},{"authors":null,"categories":null,"content":"","date":1666569600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1666569600,"objectID":"b0d61e5cbb7472bf320bf0ef2aaeb977","permalink":"https://ubc-spg.github.io/tour/","publishdate":"2022-10-24T00:00:00Z","relpermalink":"/tour/","section":"","summary":"","tags":null,"title":"Tour","type":"landing"},{"authors":["SY Lim","B Stelea","X Han","T Pasquier"],"categories":null,"content":" ","date":1635724800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1635724800,"objectID":"3c9ae855c79d8cbbc1c337201147cf33","permalink":"https://ubc-spg.github.io/publication/2021-socc/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/2021-socc/","section":"publication","summary":"Despite the wide usage of container-based cloud computing, container auditing for security analysis relies mostly on built-in host audit systems, which often lack the ability to capture high-fidelity container logs. State-of-the-art reference-monitor-based audit techniques greatly improve the quality of audit logs, but their system-wide architecture is too costly to be adapted for individual containers. Moreover, these techniques typically require extensive kernel modifications, making it difficult to deploy in practical settings. In this paper, we present saBPF (**s**ecure **a**udit **BPF**), an extension of the eBPF framework capable of deploying secure system-level audit mechanisms at the container granularity. We demonstrate the practicality of saBPF in Kubernetes by designing an audit framework, an intrusion detection system, and a lightweight access control mechanism. We evaluate saBPF and show that it is comparable in performance and security guarantees to audit systems from the literature that are implemented directly in the kernel.","tags":null,"title":"Secure Namespaced Kernel Audit for Containers","type":"publication"},{"authors":["X Han","X Yu","T Pasquier","D Li","J Rhee","J Mickens","M Seltzer","C Haifeng"],"categories":null,"content":" ","date":1628640000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1628640000,"objectID":"4d8ba397de00266c5ab0d0d39e2de526","permalink":"https://ubc-spg.github.io/publication/2021-usenixsec/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/2021-usenixsec/","section":"publication","summary":"Many users implicitly assume that software can only be exploited after it is installed. However, recent supply-chain attacks demonstrate that application integrity must be ensured during installation itself. We introduce SIGL, a new tool for detecting malicious behavior during software installation. SIGL collects traces of system call activity, building a data provenance graph that it analyzes using a novel autoencoder architecture with a graph long short-term memory network (graph LSTM) for the encoder and a standard multilayer perceptron for the decoder. SIGL flags suspicious installations as well as the specific installation-time processes that are likely to be malicious. Using a test corpus of 625 malicious installers containing real-world malware, we demonstrate that SIGL has a detection accuracy of 96%, outperforming similar systems from industry and academia by up to 87% in precision and recall and 45% in accuracy. We also demonstrate that SIGL can pinpoint the processes most likely to have triggered malicious behavior, works on different audit platforms and operating systems, and is robust to training data contamination and adversarial attack. It can be used with application-specific models, even in the presence of new software versions, as well as application-agnostic meta-models that encompass a wide range of applications and installers.","tags":null,"title":"SIGL: Securing Software Installations Through Deep Graph Learning","type":"publication"},{"authors":null,"categories":null,"content":"Congratulations to Jian Yang and Monica Hall for winning the Best Paper Award at the 2020 Conference on Wowchemy for their paper “Learning Wowchemy”.\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Integer tempus augue non tempor egestas. Proin nisl nunc, dignissim in accumsan dapibus, auctor ullamcorper neque. Quisque at elit felis. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Aenean eget elementum odio. Cras interdum eget risus sit amet aliquet. In volutpat, nisl ut fringilla dignissim, arcu nisl suscipit ante, at accumsan sapien nisl eu eros.\nSed eu dui nec ligula bibendum dapibus. Nullam imperdiet auctor tortor, vel cursus mauris malesuada non. Quisque ultrices euismod dapibus. Aenean sed gravida risus. Sed nisi tortor, vulputate nec quam non, placerat porta nisl. Nunc varius lobortis urna, condimentum facilisis ipsum molestie eu. Ut molestie eleifend ligula sed dignissim. Duis ut tellus turpis. Praesent tincidunt, nunc sed congue malesuada, mauris enim maximus massa, eget interdum turpis urna et ante. Morbi sem nisl, cursus quis mollis et, interdum luctus augue. Aliquam laoreet, leo et accumsan tincidunt, libero neque aliquet lectus, a ultricies lorem mi a orci.\nMauris dapibus sem vel magna convallis laoreet. Donec in venenatis urna, vitae sodales odio. Praesent tortor diam, varius non luctus nec, bibendum vel est. Quisque id sem enim. Maecenas at est leo. Vestibulum tristique pellentesque ex, blandit placerat nunc eleifend sit amet. Fusce eget lectus bibendum, accumsan mi quis, luctus sem. Etiam vitae nulla scelerisque, eleifend odio in, euismod quam. Etiam porta ullamcorper massa, vitae gravida turpis euismod quis. Mauris sodales sem ac ultrices viverra. In placerat ultrices sapien. Suspendisse eu arcu hendrerit, luctus tortor cursus, maximus dolor. Proin et velit et quam gravida dapibus. Donec blandit justo ut consequat tristique.\n","date":1606867200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1606867200,"objectID":"2a0ec8a990dbd78a00c4e15a09364b00","permalink":"https://ubc-spg.github.io/post/20-12-02-icml-best-paper/","publishdate":"2020-12-02T00:00:00Z","relpermalink":"/post/20-12-02-icml-best-paper/","section":"post","summary":"Congratulations to Jian Yang and Monica Hall for winning the Best Paper Award at the 2020 Conference on Wowchemy for their paper “Learning Wowchemy”.\n","tags":null,"title":"Jian Yang and Monica Hall Win the Best Paper Award at Wowchemy 2020","type":"post"},{"authors":null,"categories":null,"content":"Congratulations to Richard Hendricks for winning first place in the Wowchemy Prize.\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Integer tempus augue non tempor egestas. Proin nisl nunc, dignissim in accumsan dapibus, auctor ullamcorper neque. Quisque at elit felis. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Aenean eget elementum odio. Cras interdum eget risus sit amet aliquet. In volutpat, nisl ut fringilla dignissim, arcu nisl suscipit ante, at accumsan sapien nisl eu eros.\nSed eu dui nec ligula bibendum dapibus. Nullam imperdiet auctor tortor, vel cursus mauris malesuada non. Quisque ultrices euismod dapibus. Aenean sed gravida risus. Sed nisi tortor, vulputate nec quam non, placerat porta nisl. Nunc varius lobortis urna, condimentum facilisis ipsum molestie eu. Ut molestie eleifend ligula sed dignissim. Duis ut tellus turpis. Praesent tincidunt, nunc sed congue malesuada, mauris enim maximus massa, eget interdum turpis urna et ante. Morbi sem nisl, cursus quis mollis et, interdum luctus augue. Aliquam laoreet, leo et accumsan tincidunt, libero neque aliquet lectus, a ultricies lorem mi a orci.\nMauris dapibus sem vel magna convallis laoreet. Donec in venenatis urna, vitae sodales odio. Praesent tortor diam, varius non luctus nec, bibendum vel est. Quisque id sem enim. Maecenas at est leo. Vestibulum tristique pellentesque ex, blandit placerat nunc eleifend sit amet. Fusce eget lectus bibendum, accumsan mi quis, luctus sem. Etiam vitae nulla scelerisque, eleifend odio in, euismod quam. Etiam porta ullamcorper massa, vitae gravida turpis euismod quis. Mauris sodales sem ac ultrices viverra. In placerat ultrices sapien. Suspendisse eu arcu hendrerit, luctus tortor cursus, maximus dolor. Proin et velit et quam gravida dapibus. Donec blandit justo ut consequat tristique.\n","date":1606780800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1606780800,"objectID":"be2bd15f022f0d83fe9ffd743881e70c","permalink":"https://ubc-spg.github.io/post/20-12-01-wowchemy-prize/","publishdate":"2020-12-01T00:00:00Z","relpermalink":"/post/20-12-01-wowchemy-prize/","section":"post","summary":"Congratulations to Richard Hendricks for winning first place in the Wowchemy Prize.\n","tags":null,"title":"Richard Hendricks Wins First Place in the Wowchemy Prize","type":"post"},{"authors":["X Han","T Pasquier","A Bates","J Mickens","M Seltzer"],"categories":null,"content":" ","date":1583020800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1583020800,"objectID":"761626ce975ec661e9ac468b242fb563","permalink":"https://ubc-spg.github.io/publication/2020-ndss/","publishdate":"2020-03-01T00:00:00Z","relpermalink":"/publication/2020-ndss/","section":"publication","summary":"Advanced Persistent Threats (APTs) are difficult to detect due to their low-and-slow attack patterns and frequent use of zero-day exploits. We present UNICORN, an anomaly-based APT detector that effectively leverages data provenance analysis. From modeling to detection, UNICORN tailors its design specifically for the unique characteristics of APTs. Through extensive yet time-efficient graph analysis, UNICORN explores provenance graphs that provide rich contextual and historical information to identify stealthy anomalous activities without pre-defined attack signatures. Using a graph sketching technique, it summarizes long-running system execution with space efficiency to combat slow-acting attacks that take place over a long time span. UNICORN further improves its detection capability using a novel modeling approach to understand long-term behavior as the system evolves. Our evaluation shows that UNICORN outperforms an existing state-of-the-art APT detection system and detects real-life APT scenarios with high accuracy.","tags":null,"title":"UNICORN: Runtime Provenance-Based Detector for Advanced Persistent Threats","type":"publication"},{"authors":["T Pasquier","X Han","T Moyer","A Bates","O Hermant","D Eyers","J Bacon","M Seltzer"],"categories":null,"content":" ","date":1539561600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1539561600,"objectID":"d727e5daf611e690ebe372bc0192d3f6","permalink":"https://ubc-spg.github.io/publication/2018-ccs/","publishdate":"2018-10-15T00:00:00Z","relpermalink":"/publication/2018-ccs/","section":"publication","summary":"Identifying the root cause and impact of a system intrusion remains a foundational challenge in computer security. Digital provenance provides a detailed history of the flow of information within a computing system, connecting suspicious events to their root causes. Although existing provenance-based auditing techniques provide value in forensic analysis, they assume that such analysis takes place only retrospectively. Such post-hoc analysis is insufficient for realtime security applications; moreover, even for forensic tasks, prior provenance collection systems exhibited poor performance and scalability, jeopardizing the timeliness of query responses. We present CamQuery, which provides inline, realtime provenance analysis, making it suitable for implementing security applications. CamQuery is a Linux Security Module that offers support for both userspace and in-kernel execution of analysis applications. We demonstrate the applicability of CamQuery to a variety of runtime security applications including data loss prevention, intrusion detection, and regulatory compliance. In evaluation, we demonstrate that CamQuery reduces the latency of realtime query mechanisms, while imposing minimal overheads on system execution. CamQuery thus enables the further deployment of provenance-based technologies to address central challenges in computer security.","tags":null,"title":"Runtime Analysis of Whole-System Provenance","type":"publication"},{"authors":["T Pasquier","X Han","M Goldstein","T Moyer","D Eyers","M Seltzer","J Bacon"],"categories":null,"content":"","date":1506297600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1506297600,"objectID":"07f632907fed6a8aade00e2f45948e44","permalink":"https://ubc-spg.github.io/publication/2017-socc/","publishdate":"2017-09-25T00:00:00Z","relpermalink":"/publication/2017-socc/","section":"publication","summary":"Data provenance describes how data came to be in its present form. It includes data sources and the transformations that have been applied to them. Data provenance has many uses, from forensics and security to aiding the reproducibility of scientific experiments. We present CamFlow, a whole-system provenance capture mechanism that integrates easily into a PaaS offering. While there have been several prior whole-system provenance systems that captured a comprehensive, systemic and ubiquitous record of a system’s behavior, none have been widely adopted. They either A) impose too much overhead, B) are designed for long-outdated kernel releases and are hard to port to current systems, C) generate too much data, or D) are designed for a single system. CamFlow addresses these shortcoming by: 1) leveraging the latest kernel design advances to achieve efficiency; 2) using a self-contained, easily maintainable implementation relying on a Linux Security Module, NetFilter, and other existing kernel facilities; 3) providing a mechanism to tailor the captured provenance data to the needs of the application; and 4) making it easy to integrate provenance across distributed systems. The provenance we capture is streamed and consumed by tenant-built auditor applications. We illustrate the usability of our implementation by describing three such applications: demonstrating compliance with data regulations; performing fault/intrusion detection; and implementing data loss prevention. We also show how CamFlow can be leveraged to capture meaningful provenance without modifying existing applications.","tags":null,"title":"Practical Whole-System Provenance Capture","type":"publication"}]